.set CODE, 0x00000000
.set XOS_WriteC, 0x20000
.set XOS_Write0, 0x20002
.set XOS_Newline, 0x20003
.set XOS_Module, 0x2001E
.set XOS_EvaluateExpression, 0x2002D
.set XOS_ValidateAddress, 0x2003A
.set XOS_CallEvery, 0x2003C
.set XOS_RemoveTickerEvent, 0x2003D
.set XOS_ConvertCardinal1, 0x200D5
.set XOS_ConvertCardinal2, 0x200D6
.set XOS_ConvertCardinal4, 0x200D8
.set XOS_WriteI, 0x20100
.set XEconet_StartTransmit, 0x60006
.set XEconet_AbandonTransmit, 0x60008
.set XEconet_ReadStationNumber, 0x6000F
.set XWimp_ReadSysInfo, 0x600F2
.set XMessageTrans_ErrorLookup, 0x61506
.set XTaskManager_EnumerateTasks, 0x62681
.set XElite_GameOver, 0xE0CC0
.set XElite_GameRestart, 0xE0CC1
.set startWorkspace, 0x00
.set scorePort, 0x00
.set scoreStation, 0x04
.set scoreNetwork, 0x08
.set currentRank, 0x0C
.set netTally, 0x10
.set netDeaths, 0x14
.set econetHandle, 0x18
.set semaphore, 0x1C
.set transmitBuffer, 0x20
.set trName, 0x20
.set trLegal, 0x28
.set trCondition, 0x29
.set trKillLo, 0x2A
.set trDeaths, 0x2B
.set trCredits, 0x2C
.set trMachine, 0x30
.set trKillHi, 0x33
.set scoreEnabled, 0x34
.set scoreInterval, 0x38
.set stringBuffer, 0x3C
.set gameIsOver, 0x48
.set patchApplied, 0x4C
.set taskHandle, 0x50
.set taskBuffer, 0x54
.set endWorkspace, 0x64
.set workspaceSize, endWorkspace - startWorkspace
.org CODE
.long    0
.long    InitialiseModule
.long    FinaliseModule
.long    0
.long    title
.long    help
.long    helpAndCommandTable
.long    0xC0CC0
.long    SWIHandler
.long    swiDecodingTable
.long    0
title:
.byte    "EliteOverEconet"
.byte    0
.balign 4
help:
.byte    "EliteOverEconet"
.byte    9
.byte    "1.01 (11 May 2025)"
.byte    0
.balign 4
helpAndCommandTable:
.byte    "EliteStatus"
.byte    0
.balign 4
.long    EliteStatus
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteStatusHelp
.byte    "EliteTxStation"
.byte    0
.balign 4
.long    EliteTxStation
.byte    1
.byte    0
.byte    1
.byte    0
.long    0
.long    eliteTxStationHelp
.byte    "EliteTxPort"
.byte    0
.balign 4
.long    EliteTxPort
.byte    1
.byte    0
.byte    1
.byte    0
.long    0
.long    eliteTxPortHelp
.byte    "EliteTxInterval"
.byte    0
.balign 4
.long    EliteTxInterval
.byte    1
.byte    0
.byte    1
.byte    0
.long    0
.long    eliteTxIntervalHelp
.byte    "EliteTxStart"
.byte    0
.balign 4
.long    EliteTxStart
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteTxStartHelp
.byte    "EliteTxStop"
.byte    0
.balign 4
.long    EliteTxStop
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteTxStopHelp
.byte    "EliteTxReset"
.byte    0
.balign 4
.long    EliteTxReset
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteTxResetHelp
.long    0
EliteTxPort:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_EvaluateExpression
 BVS     port1
 TEQ     R1, #0
 BNE     port1
EliteTxPort_SWI:
 CMP     R2, #1
 BLT     port1
 CMP     R2, #254
 BGT     port1
 STR     R2, [R12, #scorePort]
 MOV     R0, #0
 LDMFD   R13!, {PC}^
port1:
 ADR     R0, eliteTxPortError
 LDMFD   R13!, {R14}
 ORRS    PC, R14, #1<<28
eliteTxPortError:
.long    255
.byte    "Invalid port number (it must be in the range 1 to 254)"
.byte    0
.balign 4
eliteTxPortHelp:
.byte    "*EliteTxPort sets the port number for transmitting scores."
.byte    13
.byte    "Syntax: *EliteTxPort <port>"
.byte    0
.balign 4
EliteTxStation:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
EliteTxStation_SWI:
 MOV     R1, R0
 SWI     XEconet_ReadStationNumber
 BVS     stat1
 CMN     R2, #1
 BEQ     stat2
 CMN     R3, #1
 MOVEQ   R3, #0
 STR     R2, [R12, #scoreStation]
 STR     R3, [R12, #scoreNetwork]
 MOV     R0, #0
stat1:
 LDMFD   R13!, {PC}^
stat2:
 ADR     R0, eliteTxStationError
 LDMFD   R13!, {R14}
 ORRS    PC, R14, #1<<28
eliteTxStationError:
.long    255
.byte    "Invalid station (it must be in the format 123 or 1.234)"
.byte    0
.balign 4
eliteTxStationHelp:
.byte    "*EliteTxStation sets the network and station number "
.byte    "for transmitting scores."
.byte    13
.byte    "Syntax: *EliteTxStation [<network>.]<station>"
.byte    0
.balign 4
EliteTxInterval:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_EvaluateExpression
 BVS     intv2
 TEQ     R1, #0
 BNE     intv2
EliteTxInterval_SWI:
 TEQ     R2, #0
 BEQ     intv2
 STR     R2, [R12, #scoreInterval]
 LDR     R1, [R12, #scoreEnabled]
 TEQ     R1, #0
 BEQ     intv1
 ADRL    R0, TransmitData
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 LDR     R0, [R12, #scoreInterval]
 MOV     R1, #100
 MUL     R0, R1, R0
 ADRL    R1, TransmitData
 MOV     R2, R12
 SWI     XOS_CallEvery
 BVS     star3
intv1:
 MOV     R0, #0
 LDMFD   R13!, {PC}^
intv2:
 ADR     R0, eliteTxIntervalError
 LDMFD   R13!, {R14}
 ORRS    PC, R14, #1<<28
eliteTxIntervalError:
.long    255
.byte    "Invalid interval (it must be at least 1 second)"
.byte    0
.balign 4
eliteTxIntervalHelp:
.byte    "*EliteTxInterval sets the interval in seconds "
.byte    "between score transmissions."
.byte    13
.byte    "Syntax: *EliteTxInterval <interval>"
.byte    0
.balign 4
EliteTxStop:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
EliteTxStop_SWI:
 LDR     R1, [R12, #scoreEnabled]
 TEQ     R1, #0
 BEQ     stop1
 MOV     R0, #0
 STR     R0, [R12, #scoreEnabled]
 ADRL    R0, TransmitData
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 MOV     R0, #0
 LDMFD   R13!, {PC}^
stop1:
 ADR     R0, eliteTxStopError
 LDMFD   R13!, {R14}
 ORRS    PC, R14, #1<<28
eliteTxStopError:
.long    255
.byte    "Transmissions are already disabled"
.byte    0
.balign 4
eliteTxStopHelp:
.byte    "*EliteTxStop disables score transmissions."
.byte    13
.byte    "Syntax: *EliteTxStop"
.byte    0
.balign 4
EliteTxStart:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
EliteTxStart_SWI:
 LDR     R1, [R12, #scoreEnabled]
 TEQ     R1, #1
 BEQ     star1
 LDR     R1, [R12, #scorePort]
 TEQ     R1, #0
 LDRNE   R2, [R12, #scoreStation]
 TEQNE   R2, #0
 BEQ     star2
 ADRL    R0, TransmitData
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 LDR     R0, [R12, #scoreInterval]
 MOV     R1, #100
 MUL     R0, R1, R0
 ADRL    R1, TransmitData
 MOV     R2, R12
 SWI     XOS_CallEvery
 BVS     star3
 MOV     R0, #1
 STR     R0, [R12, #scoreEnabled]
 MOV     R0, #0
 LDMFD   R13!, {PC}^
star1:
 ADR     R0, eliteTxStartError1
 LDMFD   R13!, {R14}
 ORRS    PC, R14, #1<<28
star2:
 ADR     R0, eliteTxStartError2
 LDMFD   R13!, {R14}
 ORRS    PC, R14, #1<<28
star3:
 ADR     R0, eliteTxStartError3
 LDMFD   R13!, {R14}
 ORRS    PC, R14, #1<<28
eliteTxStartError1:
.long    255
.byte    "Transmissions are already enabled"
.byte    0
.balign 4
eliteTxStartError2:
.long    255
.byte    "Both the port and station number must be "
.byte    "non-zero to enable transmissions"
.byte    0
.balign 4
eliteTxStartError3:
.long    255
.byte    "There was an error starting the transmission event"
.byte    0
.balign 4
eliteTxStartHelp:
.byte    "*EliteTxStart enables score transmissions."
.byte    13
.byte    "Syntax: *EliteTxStart"
.byte    0
.balign 4
EliteTxReset:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
EliteTxReset_SWI:
 MOV     R0, #0
 STR     R0, [R12, #netTally]
 STR     R0, [R12, #netDeaths]
 LDMFD   R13!, {PC}^
eliteTxResetHelp:
.byte    "*EliteTxReset resets the kill tally and death count."
.byte    13
.byte    "Syntax: *EliteTxReset"
.byte    0
.balign 4
EliteStatus:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 SWI     XOS_Newline
 ADR     R0, statusIntro
 SWI     XOS_Write0
 SWI     XOS_Newline
 SWI     XOS_Newline
 LDR     R0, [R12, #scoreEnabled]
 TEQ     R0, #0
 ADREQ   R0, statusDisabled
 ADRNE   R0, statusEnabled
 SWI     XOS_Write0
 SWI     XOS_Newline
 ADR     R0, statusInterval1
 SWI     XOS_Write0
 LDR     R0, [R12, #scoreInterval]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal4
 SWI     XOS_Write0
 ADR     R0, statusInterval2
 SWI     XOS_Write0
 SWI     XOS_Newline
 ADR     R0, statusStation
 SWI     XOS_Write0
 LDR     R0, [R12, #scoreNetwork]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal1
 SWI     XOS_Write0
 MOV     R0, #0x2E
 SWI     XOS_WriteC
 LDR     R0, [R12, #scoreStation]
 CMP     R0, #100
 SWILT   XOS_WriteI+0x30
 CMP     R0, #10
 SWILT   XOS_WriteI+0x30
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal1
 SWI     XOS_Write0
 SWI     XOS_Newline
 ADR     R0, statusPort
 SWI     XOS_Write0
 LDR     R0, [R12, #scorePort]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal1
 SWI     XOS_Write0
 SWI     XOS_Newline
 ADR     R0, statusKills
 SWI     XOS_Write0
 LDR     R0, [R12, #netTally]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal2
 SWI     XOS_Write0
 MOV     R0, #0x2F
 SWI     XOS_WriteC
 LDR     R0, [R12, #netDeaths]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal1
 SWI     XOS_Write0
 SWI     XOS_Newline
 SWI     XOS_Newline
 LDMFD   R13!, {PC}
statusIntro:
.byte    "Current status of Elite over Econet:"
.byte    0
.balign 4
statusEnabled:
.byte    "Transmissions:      Enabled"
.byte    0
.balign 4
statusDisabled:
.byte    "Transmissions:      Disabled"
.byte    0
.balign 4
statusInterval1:
.byte    "Transmit interval:  "
.byte    0
.balign 4
statusInterval2:
.byte    " seconds"
.byte    0
.balign 4
statusStation:
.byte    "Scoreboard station: "
.byte    0
.balign 4
statusPort:
.byte    "Scoreboard port:    "
.byte    0
.balign 4
statusKills:
.byte    "Kills/deaths:       "
.byte    0
.balign 4
eliteStatusHelp:
.byte    "*EliteStatus shows the current status of Elite over Econet."
.byte    13
.byte    "Syntax: *EliteStatus"
.byte    0
.balign 4
SWIHandler:
 LDR     R12, [R12]
 CMP     R11, #4 * 4
 ADDLO   PC, PC, R11, LSL #2
 B       UnknownSWIError
jump:
 B       SWI_Elite_GameOver
 B       SWI_Elite_GameRestart
 B       SWI_Elite_GetStatus
 B       SWI_Elite_SetStatus
UnknownSWIError:
 ADR     R0, swiError
 MOV     R1, #0
 MOV     R2, #0
 ADRL    R4, title
 SWI     XMessageTrans_ErrorLookup
 ORRS    PC, R14, #1<<28
swiError:
.long    0x1E6
.byte    "BadSWI"
.byte    0
.balign 4
swiDecodingTable:
.byte    "Elite"
.byte    0
.byte    "GameOver"
.byte    0
.byte    "GameRestart"
.byte    0
.byte    "GetStatus"
.byte    0
.byte    "SetStatus"
.byte    0
.byte    0
.balign 4
SWI_Elite_GameOver:
 MOV     R0, #1
 STR     R0, [R12, #gameIsOver]
 MOV     R0, #0x29
 MOVS    PC, R14
SWI_Elite_GameRestart:
 LDR     R2, [R12, #gameIsOver]
 TEQ     R2, #0
 BEQ     notDeath
 LDR     R2, [R12, #netDeaths]
 ADD     R2, R2, #1
 CMP     R2, #256
 STRLT   R2, [R12, #netDeaths]
 MOV     R2, #0
 STR     R2, [R12, #gameIsOver]
notDeath:
 MOV     R2, #0x12C
 MOVS    PC, R14
SWI_Elite_GetStatus:
 LDR     R0, [R12, #scorePort]
 LDR     R1, [R12, #scoreStation]
 LDR     R2, [R12, #scoreNetwork]
 LDR     R3, [R12, #netTally]
 LDR     R4, [R12, #netDeaths]
 LDR     R5, [R12, #scoreEnabled]
 LDR     R6, [R12, #scoreInterval]
 MOVS    PC, R14
SWI_Elite_SetStatus:
 STMFD   R13!, {R14}
 TEQ     R0, #1
 MOVEQ   R0, R1
 BEQ     EliteTxStation_SWI
 TEQ     R0, #2
 MOVEQ   R2, R1
 BEQ     EliteTxPort_SWI
 TEQ     R0, #3
 BEQ     EliteTxReset_SWI
 TEQ     R0, #4
 BEQ     EliteTxStart_SWI
 TEQ     R0, #5
 BEQ     EliteTxStop_SWI
 TEQ     R0, #6
 MOVEQ   R2, R1
 BEQ     EliteTxInterval_SWI
 LDMFD   R13!, {PC}^
InitialiseModule:
 STMFD   R13!, {R14}
 LDR     R2, [R12]
 TEQ     R2, #0
 MOVNE   R12, R2
 BNE     init1
 MOV     R0, #6
 MOV     R3, #workspaceSize
 SWI     XOS_Module
 LDMVSFD R13!, {PC}
 STR     R2, [R12]
 MOV     R12, R2
 MOV     R1, #0
 STR     R1, [R12, #econetHandle]
 STR     R1, [R12, #taskHandle]
 STR     R1, [R12, #netTally]
 STR     R1, [R12, #netDeaths]
 STR     R1, [R12, #gameIsOver]
 STR     R1, [R12, #patchApplied]
 STR     R1, [R12, #semaphore]
 STR     R1, [R12, #scoreNetwork]
 STR     R1, [R12, #scoreStation]
 STR     R1, [R12, #scorePort]
 STR     R1, [R12, #scoreEnabled]
 MVN     R1, #0
 STR     R1, [R12, #currentRank]
 MOV     R1, #10
 STR     R1, [R12, #scoreInterval]
init1:
 MOV     R0, #50
 ADR     R1, MonitorRank
 MOV     R2, R12
 SWI     XOS_CallEvery
 LDMVSFD R13!, {PC}
 LDR     R1, [R12, #scoreEnabled]
 TEQ     R1, #1
 BNE     init2
 LDR     R1, [R12, #scorePort]
 TEQ     R1, #0
 LDRNE   R2, [R12, #scoreStation]
 TEQNE   R2, #0
 BEQ     init2
 LDR     R0, [R12, #scoreInterval]
 MOV     R1, #100
 MUL     R0, R1, R0
 ADRL    R1, TransmitData
 MOV     R2, R12
 SWI     XOS_CallEvery
init2:
 LDMFD   R13!, {PC}^
FinaliseModule:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 ADR     R0, TransmitData
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 ADR     R0, MonitorRank
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 LDR     R0, [R12, #econetHandle]
 TEQ     R0, #0
 SWINE   XEconet_AbandonTransmit
 MOV     R1, #0
 STR     R1, [R12, #econetHandle]
 LDMFD   R13!, {PC}^
TransmitData:
 STMFD   R13!, {R0-R12}
 MOV     R5, PC
 BIC     R4, R5, #3
 TEQP    R4, #3
 MOV     R0, R0
 STMFD   R13!, {R5, R14}
 LDR     R2, [R12, #taskHandle]
 TEQ     R2, #0
 BLEQ    FetchEliteTaskHandle
 BEQ     skipT
 MOV     R0, #5
 SWI     XWimp_ReadSysInfo
 BVS     skipT
 CMP     R0, R2
 BNE     skipT
 LDR     R0, [R12, #semaphore]
 TEQ     R0, #0
 BNE     doneT
 MOV     R0, #1
 STR     R0, [R12, #semaphore]
 LDR     R0, [R12, #econetHandle]
 TEQ     R0, #0
 SWINE   XEconet_AbandonTransmit
 ADR     R0, cmdrName
 LDR     R0, [R0]
 ADD     R1, R0, #4
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 TST     R2, #0x000000FF
 ORREQ   R2, R2, #0x0000000D
 TST     R2, #0x0000FF00
 ORREQ   R2, R2, #0x00000D00
 TST     R2, #0x00FF0000
 ORREQ   R2, R2, #0x000D0000
 TST     R2, #0xFF000000
 ORREQ   R2, R2, #0x0D000000
 STR     R2, [R12, #trName]
 LDR     R2, [R0, #4]
 TST     R2, #0x000000FF
 ORREQ   R2, R2, #0x0000000D
 TST     R2, #0x0000FF00
 ORREQ   R2, R2, #0x00000D00
 TST     R2, #0x00FF0000
 ORREQ   R2, R2, #0x000D0000
 BIC     R2, R2, #0xFF000000
 ORR     R2, R2, #0x0D000000
 STR     R2, [R12, #trName+4]
 MOV     R3, #1
 ADR     R0, cmdrLegal
 LDR     R0, [R0]
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 CMP     R2, #0x28
 MOVLE   R3, #0
 CMP     R2, #0x3E8
 MOVGT   R3, #3
 STRB    R3, [R12, #trLegal]
 ADR     R0, cmdrCondition
 LDR     R0, [R0]
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 ADD     R2, R2, #1
 CMP     R2, #4
 CMPNE   R2, #5
 MOVEQ   R2, #3
 CMP     R2, #6
 MOVGE   R2, #0
 STRB    R2, [R12, #trCondition]
 MOV     R2, #4
 STR     R2, [R12, #trMachine]
 LDR     R2, [R12, #netTally]
 MOV     R0, R2, LSR #8
 STRB    R2, [R12, #trKillLo]
 STRB    R0, [R12, #trKillHi]
 LDRB    R2, [R12, #netDeaths]
 STRB    R2, [R12, #trDeaths]
 ADR     R0, cmdrCredits
 LDR     R0, [R0]
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 STR     R2, [R12, #trCredits]
 LDR     R1, [R12, #scorePort]
 TEQ     R1, #0
 LDRNE   R2, [R12, #scoreStation]
 TEQNE   R2, #0
 BEQ     skipT
 MOV     R0, #0
 LDR     R3, [R12, #scoreNetwork]
 ADD     R4, R12, #transmitBuffer
 MOV     R5, #20
 MOV     R6, #1
 MOV     R7, #0
 SWI     XEconet_StartTransmit
 MOVVS   R0, #0
 STR     R0, [R12, #econetHandle]
skipT:
 MOV     R0, #0
 STR     R0, [R12, #semaphore]
doneT:
 LDMFD   R13!, {R5, R14}
 TEQP    R5, #0
 MOV     R0, R0
 LDMFD   R13!, {R0-R12}
 MOV     PC, R14
MonitorRank:
 STMFD   R13!, {R0-R12}
 MOV     R5, PC
 BIC     R4, R5, #3
 TEQP    R4, #3
 MOV     R0, R0
 STMFD   R13!, {R5, R14}
 LDR     R2, [R12, #taskHandle]
 TEQ     R2, #0
 BLEQ    FetchEliteTaskHandle
 BEQ     skipM
 MOV     R0, #5
 SWI     XWimp_ReadSysInfo
 BVS     skipM
 CMP     R0, R2
 BNE     skipM
 LDR     R1, [R12, #patchApplied]
 TEQ     R1, #1
 BEQ     skipP
 ADR     R0, gameOverAddr
 LDR     R0, [R0]
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipM
 BCS     skipM
 ADR     R1, gameOverPatch
 LDR     R1, [R1]
 STR     R1, [R0]
 ADR     R0, restartAddr
 LDR     R0, [R0]
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipM
 BCS     skipM
 ADR     R1, restartPatch
 LDR     R1, [R1]
 STR     R1, [R0]
 MOV     R1, #1
 STR     R1, [R12, #patchApplied]
skipP:
 ADR     R0, cmdrRank
 LDR     R0, [R0]
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipM
 BCS     skipM
 LDR     R1, [R12, #currentRank]
 LDR     R2, [R0]
 STR     R2, [R12, #currentRank]
 CMN     R1, #1
 BEQ     skipM
 CMP     R2, R1
 LDRGT   R3, [R12, #netTally]
 ADDGT   R3, R3, #1
 STRGT   R3, [R12, #netTally]
skipM:
 LDMFD   R13!, {R5, R14}
 TEQP    R5, #0
 MOV     R0, R0
 LDMFD   R13!, {R0-R12}
 MOV     PC, R14
FetchEliteTaskHandle:
 STMFD   R13!, {R14}
 MOV     R0, #0
hand1:
 ADD     R1, R12, #taskBuffer
 MOV     R2, #16
 SWI     XTaskManager_EnumerateTasks
 MOVVS   R0, #0
 BVS     hand2
 CMP     R0, #0
 MOVLT   R0, #0
 BLT     hand2
 LDR     R3, [R12, #taskBuffer+4]
 ADR     R5, eliteTaskName
 LDR     R4, [R3], #4
 LDR     R6, [R5], #4
 CMP     R4, R6
 BNE     hand1
 LDR     R4, [R3], #4
 BIC     R4, R4, #0xFF000000
 BIC     R4, R4, #0x00FF0000
 LDR     R6, [R5], #4
 CMP     R4, R6
 BNE     hand1
 LDR     R0, [R12, #taskBuffer]
 STR     R0, [R12, #taskHandle]
hand2:
 MOVS    R2, R0
 LDMFD   R13!, {PC}
cmdrName:
.long    0x0005A698
cmdrRank:
.long    0x0005A960
cmdrCredits:
.long    0x0006534C
cmdrLegal:
.long    0x00065398
cmdrCondition:
.long    0x000653A0
gameOverAddr:
.long    0x0000BBD0
gameOverPatch:
 SWI     XElite_GameOver
restartAddr:
.long    0x0001AF24
restartPatch:
 SWI     XElite_GameRestart
eliteTaskName:
.byte "Elite"
.byte 0
.balign 4
