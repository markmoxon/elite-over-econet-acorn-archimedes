.set CODE, 0x00000000
.set XOS_WriteC, 0x20000
.set XOS_Write0, 0x20002
.set XOS_Newline, 0x20003
.set XOS_Module, 0x2001E
.set XOS_EvaluateExpression, 0x2002D
.set XOS_ValidateAddress, 0x2003A
.set XOS_CallEvery, 0x2003C
.set XOS_RemoveTickerEvent, 0x2003D
.set XOS_ConvertCardinal1, 0x200D5
.set XOS_ConvertCardinal4, 0x200D8
.set XOS_WriteI, 0x20100
.set XEconet_StartTransmit, 0x60006
.set XEconet_AbandonTransmit, 0x60008
.set XEconet_ReadStationNumber, 0x6000F
.set startWorkspace, 0x00
.set scorePort, 0x00
.set scoreStation, 0x04
.set scoreNetwork, 0x08
.set currentRank, 0x0C
.set netTally, 0x10
.set netDeaths, 0x14
.set econetHandle, 0x18
.set semaphore, 0x1C
.set transmitBuffer, 0x20
.set trName, 0x20
.set trLegal, 0x28
.set trCondition, 0x29
.set trKill, 0x2A
.set trDeaths, 0x2B
.set trCredits, 0x2C
.set trMachine, 0x30
.set scoreEnabled, 0x34
.set scoreInterval, 0x38
.set stringBuffer, 0x3C
.set endWorkspace, 0x48
.set workspaceSize, endWorkspace - startWorkspace
.org CODE
.long    0
.long    InitialiseModule
.long    FinaliseModule
.long    0
.long    title
.long    help
.long    helpAndCommandTable
title:
.byte    "EliteOverEconet"
.byte    0
.balign 4
help:
.byte    "EliteOverEconet"
.byte    9
.byte    "0.10 (02 Apr 2025)"
.byte    0
.balign 4
helpAndCommandTable:
.byte    "EliteTxPort"
.byte    0
.balign 4
.long    EliteTxPort
.byte    1
.byte    0
.byte    1
.byte    0
.long    0
.long    eliteTxPortHelp
.byte    "EliteTxStation"
.byte    0
.balign 4
.long    EliteTxStation
.byte    1
.byte    0
.byte    1
.byte    0
.long    0
.long    eliteTxStationHelp
.byte    "EliteTxInterval"
.byte    0
.balign 4
.long    EliteTxInterval
.byte    1
.byte    0
.byte    1
.byte    0
.long    0
.long    eliteTxIntervalHelp
.byte    "EliteTxStop"
.byte    0
.balign 4
.long    EliteTxStop
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteTxStopHelp
.byte    "EliteTxStart"
.byte    0
.balign 4
.long    EliteTxStart
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteTxStartHelp
.byte    "EliteTxReset"
.byte    0
.balign 4
.long    EliteTxReset
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteTxResetHelp
.byte    "EliteTxStatus"
.byte    0
.balign 4
.long    EliteTxStatus
.byte    0
.byte    0
.byte    0
.byte    0
.long    0
.long    eliteTxStatusHelp
.long    0
EliteTxPort:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_EvaluateExpression
 BVS     port1
 TST     R1, #0
 BNE     port1
 CMP     R2, #0
 BLE     port1
 CMP     R2, #255
 BGT     port1
 STR     R2, [R12, #scorePort]
 MOV     R0, #0
 LDMFD   R13!, {PC}
port1:
 ADR     R0, eliteTxPortError
 LDMFD   R13!, {R14}
 ORR     R14, R14, #1<<28
 MOVS    PC, R14
eliteTxPortError:
.long    0
.byte    "Invalid port number (must be 1 to 255)"
.byte    0
.balign 4
eliteTxPortHelp:
.byte    "*EliteTxPort sets the port number for transmitting scores."
.byte    13
.byte    "Syntax: *EliteTxPort <port number>"
.byte    0
.balign 4
EliteTxStation:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 MOV     R1, R0
 SWI     XEconet_ReadStationNumber
 BVS     stat1
 CMN     R2, #1
 BEQ     stat2
 CMN     R3, #1
 MOVEQ   R3, #0
 STR     R2, [R12, #scoreNetwork]
 STR     R3, [R12, #scoreStation]
 MOV     R0, #0
stat1:
 LDMFD   R13!, {PC}
stat2:
 ADR     R0, eliteTxStationError
 LDMFD   R13!, {R14}
 ORR     R14, R14, #1<<28
 MOVS    PC, R14
eliteTxStationError:
.long    0
.byte    "Invalid station (must be in the format 0.123)"
.byte    0
.balign 4
eliteTxStationHelp:
.byte    "*EliteTxStation sets the network and station number for transmitting scores."
.byte    13
.byte    "Syntax: *EliteTxStation <network>.<station>"
.byte    0
.balign 4
EliteTxInterval:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_EvaluateExpression
 BVS     intv1
 TST     R1, #0
 BNE     intv1
 CMP     R2, #100
 BLT     intv1
 STR     R2, [R12, #scoreInterval]
 MOV     R0, #0
 LDMFD   R13!, {PC}
intv1:
 ADR     R0, eliteTxIntervalError
 LDMFD   R13!, {R14}
 ORR     R14, R14, #1<<28
 MOVS    PC, R14
eliteTxIntervalError:
.long    0
.byte    "Invalid interval (must be at least 100)"
.byte    0
.balign 4
eliteTxIntervalHelp:
.byte    "*EliteTxInterval sets the interval in centiseconds "
.byte    "between score transmissions."
.byte    13
.byte    "Syntax: *EliteTxInterval <interval>"
.byte    0
.balign 4
EliteTxStop:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 LDR     R1, [R12, #scoreEnabled]
 TEQ     R1, #0
 BEQ     stop1
 MOV     R0, #0
 STR     R2, [R12, #scoreEnabled]
 ADR     R0, TransmitData
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 MOV     R0, #0
 LDMFD   R13!, {PC}
stop1:
 ADR     R0, eliteTxStopError
 LDMFD   R13!, {R14}
 ORR     R14, R14, #1<<28
 MOVS    PC, R14
eliteTxStopError:
.long    0
.byte    "Transmissions are already disabled"
.byte    0
.balign 4
eliteTxStopHelp:
.byte    "*EliteTxStop disables score transmissions."
.byte    13
.byte    "Syntax: *EliteTxStop"
.byte    0
.balign 4
EliteTxStart:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 LDR     R1, [R12, #scoreEnabled]
 TEQ     R1, #1
 BEQ     star1
 MOV     R0, #1
 STR     R2, [R12, #scoreEnabled]
 LDR     R0, [R2, #scoreInterval]
 ADR     R1, TransmitData
 MOV     R2, R12
 SWI     XOS_CallEvery
 MOV     R0, #0
 LDMFD   R13!, {PC}
star1:
 ADR     R0, eliteTxStartError
 LDMFD   R13!, {R14}
 ORR     R14, R14, #1<<28
 MOVS    PC, R14
eliteTxStartError:
.long    0
.byte    "Transmissions are already enabled"
.byte    0
.balign 4
eliteTxStartHelp:
.byte    "*EliteTxStart enables score transmissions."
.byte    13
.byte    "Syntax: *EliteTxStart"
.byte    0
.balign 4
EliteTxReset:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 MOV     R0, #0
 STR     R0, [R12, #netTally]
 STR     R0, [R12, #netDeaths]
 LDMFD   R13!, {PC}
eliteTxResetHelp:
.byte    "*EliteTxReset resets the kill tally and death count."
.byte    13
.byte    "Syntax: *EliteTxReset"
.byte    0
.balign 4
EliteTxStatus:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 LDR     R0, [R12, #scoreEnabled]
 TEQ     R0, #0
 ADREQ   R0, statusDisabled
 ADRNE   R0, statusEnabled
 SWI     XOS_Write0
 SWI     XOS_Newline
 ADR     R0, statusInterval1
 SWI     XOS_Write0
 LDR     R0, [R12, #scoreInterval]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal4
 SWI     XOS_Write0
 ADR     R0, statusInterval2
 SWI     XOS_Write0
 SWI     XOS_Newline
 ADR     R0, statusStation
 SWI     XOS_Write0
 LDR     R0, [R12, #scoreNetwork]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal1
 SWI     XOS_Write0
 MOV     R0, #0x2E
 SWI     XOS_WriteC
 LDR     R0, [R12, #scoreStation]
 CMP     R0, #100
 SWILT   XOS_WriteI+0x30
 CMP     R0, #10
 SWILT   XOS_WriteI+0x30
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal1
 SWI     XOS_Write0
 SWI     XOS_Newline
 ADR     R0, statusPort
 SWI     XOS_Write0
 LDR     R0, [R12, #scorePort]
 ADD     R1, R12, #stringBuffer
 MOV     R2, #12
 SWI     XOS_ConvertCardinal1
 SWI     XOS_Write0
 SWI     XOS_Newline
 LDMFD   R13!, {PC}
statusEnabled:
.byte    "Transmissions:      Enabled"
.byte    0
.balign 4
statusDisabled:
.byte    "Transmissions:      Disabled"
.byte    0
.balign 4
statusInterval1:
.byte    "Transmit interval:  "
.byte    0
.balign 4
statusInterval2:
.byte    " centiseconds"
.byte    0
.balign 4
statusStation:
.byte    "Scoreboard station: "
.byte    0
.balign 4
statusPort:
.byte    "Scoreboard port:    "
.byte    0
.balign 4
eliteTxStatusHelp:
.byte    "*EliteTxStatus shows the configuration for scoreboard transmissions."
.byte    13
.byte    "Syntax: *EliteTxStatus"
.byte    0
.balign 4
InitialiseModule:
 STMFD   R13!, {R14}
 LDR     R2, [R12]
 TEQ     R2, #0
 BNE     init1
 MOV     R0, #6
 MOV     R3, #workspaceSize
 SWI     XOS_Module
 LDMVSFD R13!, {PC}
 STR     R2, [R12]
 MOV     R1, #0
 STR     R1, [R2, #econetHandle]
 STR     R1, [R2, #netTally]
 STR     R1, [R2, #netDeaths]
 STR     R1, [R2, #scoreNetwork]
 STR     R1, [R2, #scoreStation]
 STR     R1, [R2, #scorePort]
 STR     R1, [R2, #scoreEnabled]
 MVN     R1, #0
 STR     R1, [R2, #currentRank]
 MOV     R1, #100
 STR     R1, [R2, #scoreInterval]
init1:
 LDR     R0, [R2, #scoreInterval]
 ADR     R1, TransmitData
 SWI     XOS_CallEvery
 MOV     R0, #50
 ADR     R1, MonitorRank
 SWI     XOS_CallEvery
 LDMFD   R13!, {PC}^
FinaliseModule:
 STMFD   R13!, {R14}
 LDR     R12, [R12]
 ADR     R0, TransmitData
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 ADR     R0, MonitorRank
 MOV     R1, R12
 SWI     XOS_RemoveTickerEvent
 LDR     R0, [R12, #econetHandle]
 TEQ     R0, #0
 SWINE   XEconet_AbandonTransmit
 MOV     R1, #0
 STR     R1, [R12, #econetHandle]
 LDMFD   R13!, {PC}^
TransmitData:
 STMFD   R13!, {R0-R12}
 MOV     R5, PC
 BIC     R4, R5, #3
 TEQP    R4, #3
 MOV     R0, R0
 STMFD   R13!, {R5, R14}
 LDR     R0, string1Addr
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R0, [R0]
 LDR     R1, string1Match
 CMP     R0, R1
 BNE     skipT
 LDR     R0, string2Addr
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R0, [R0]
 LDR     R1, string2Match
 CMP     R0, R1
 BNE     skipT
 LDR     R0, string3Addr
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R0, [R0]
 LDR     R1, string3Match
 CMP     R0, R1
 BNE     skipT
 LDR     R0, [R12, #semaphore]
 TEQ     R0, #0
 BNE     returnT
 MOV     R0, #1
 STR     R0, [R12, #semaphore]
 LDR     R0, [R12, #econetHandle]
 TEQ     R0, #0
 SWINE   XEconet_AbandonTransmit
 LDR     R0, cmdrName
 ADD     R1, R0, #4
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 TST     R2, #0x000000FF
 ORREQ   R2, R2, #0x0000000D
 TST     R2, #0x0000FF00
 ORREQ   R2, R2, #0x00000D00
 TST     R2, #0x00FF0000
 ORREQ   R2, R2, #0x000D0000
 TST     R2, #0xFF000000
 ORREQ   R2, R2, #0x0D000000
 STR     R2, [R12, #trName]
 LDR     R2, [R0, #4]
 TST     R2, #0x000000FF
 ORREQ   R2, R2, #0x0000000D
 TST     R2, #0x0000FF00
 ORREQ   R2, R2, #0x00000D00
 TST     R2, #0x00FF0000
 ORREQ   R2, R2, #0x000D0000
 AND     R2, R2, #0x00FFFFFF
 ORR     R2, R2, #0x0D000000
 STR     R2, [R12, #trName+4]
 MOV     R3, #1
 LDR     R0, cmdrLegal
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 CMP     R2, #0x28
 MOVLE   R3, #0
 CMP     R2, #0x3E8
 MOVGT   R3, #3
 STRB    R3, [R12, #trLegal]
 LDR     R0, cmdrCondition
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 ADD     R2, R2, #1
 CMP     R2, #4
 CMPNE   R2, #5
 MOVEQ   R2, #3
 CMP     R2, #6
 MOVGE   R2, #0
 STRB    R2, [R12, #trCondition]
 LDRB    R2, [R12, #netTally]
 STRB    R2, [R12, #trKill]
 LDRB    R2, [R12, #netDeaths]
 STRB    R2, [R12, #trDeaths]
 LDR     R0, cmdrCredits
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipT
 BCS     skipT
 LDR     R2, [R0]
 STR     R2, [R12, #trCredits]
 MOV     R2, #4
 STR     R2, [R12, #trMachine]
 LDR     R1, [R12, #scorePort]
 TEQ     R1, #0
 LDRNE   R2, [R12, #scoreStation]
 TEQNE   R2, #0
 BEQ     skipT
 MOV     R0, #0
 LDR     R3, [R12, #scoreNetwork]
 ADD     R4, R12, #transmitBuffer
 MOV     R5, #20
 MOV     R6, #1
 MOV     R7, #0
 SWI     XEconet_StartTransmit
 MOVVS   R0, #0
 STR     R0, [R12, #econetHandle]
skipT:
 MOV     R0, #0
 STR     R0, [R12, #semaphore]
returnT:
 LDMFD   R13!, {R5, R14}
 TEQP    R5, #0
 MOV     R0, R0
 LDMFD   R13!, {R0-R12}
 MOV     PC, R14
MonitorRank:
 STMFD   R13!, {R0-R12}
 MOV     R5, PC
 BIC     R4, R5, #3
 TEQP    R4, #3
 MOV     R0, R0
 STMFD   R13!, {R5, R14}
 LDR     R0, string1Addr
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipM
 BCS     skipM
 LDR     R0, [R0]
 LDR     R1, string1Match
 CMP     R0, R1
 BNE     skipM
 LDR     R0, string2Addr
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipM
 BCS     skipM
 LDR     R0, [R0]
 LDR     R1, string2Match
 CMP     R0, R1
 BNE     skipM
 LDR     R0, string3Addr
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipM
 BCS     skipM
 LDR     R0, [R0]
 LDR     R1, string3Match
 CMP     R0, R1
 BNE     skipM
 LDR     R0, cmdrRank
 MOV     R1, R0
 SWI     XOS_ValidateAddress
 BVS     skipM
 BCS     skipM
 LDR     R1, [R12, #currentRank]
 LDR     R2, [R0]
 STR     R2, [R12, #currentRank]
 CMN     R1, #1
 BEQ     skipM
 CMP     R2, R1
 LDRGT   R3, [R12, #netTally]
 ADDGT   R3, R3, #1
 STRGT   R3, [R12, #netTally]
skipM:
 LDMFD   R13!, {R5, R14}
 TEQP    R5, #0
 MOV     R0, R0
 LDMFD   R13!, {R0-R12}
 MOV     PC, R14
cmdrName:
.long    0x0005A698
cmdrRank:
.long    0x0005A960
cmdrCredits:
.long    0x0006534C
cmdrLegal:
.long    0x00065398
cmdrCondition:
.long    0x000653A0
string1Addr:
.long    0x0001AF14
string1Match:
.long    0x4E495247
string2Addr:
.long    0x0001AF00
string2Match:
.long    0x45525241
string3Addr:
.long    0x00071508
string3Match:
.long    0x34312E31
